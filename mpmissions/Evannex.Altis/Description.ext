title = "Evannex";
author = "Bradenm1. Edited by Goose1337";
onLoadName = "Evannex";
onLoadMission = "An AI vs AI gamemode";
loadScreen = "textures\mission_thumbnail.paa";

corpseManagerMode = 3;
corpseLimit = 10;
corpseRemovalMinTime = 10;
corpseRemovalMaxTime = 20; 
minPlayerDistance = 50;

wreckManagerMode = 1;
wreckLimit = 10;
wreckRemovalMinTime = 15;
wreckRemovalMaxTime = 90;
briefing = -1;

reviveMode = 0;
aiKills = 1;
enableItemsDropping = 0;

disabledAI = 1;
respawn = "base";
respawnButton = 1;
respawnDelay = 10;

class Header {
	gameType =  Coop;		    // Game type
	minPlayers =  1;			// minimum number of players the mission supports
	maxPlayers = 32;			// maximum number of players the mission supports
};

// Server params

class Params {

	class FriendlyFaction {
        title = "Friendly Faction";
        values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67};
        texts[] = {"A3_AAF", "A3_CSAT_Arid", "A3_CSAT_Spetsnaz", "A3_CSAT_Tropic", "A3_FIA", "A3_LDF", "A3_NATO_Arid", "A3_NATO_Tropic", "A3_NATO_Woodland", "A3_Syndikat", "CSLA_AFMC", "CSLA_CSLA", "CSLA_FIA", "CSLA_US", "CUP_CDF", "CUP_RACS", "CUP_RUS_Arid", "CUP_RUS_Woodland", "CUP_SLA", "CUP_Takistan", "CUP_US_Arid", "CUP_US_Woodland", "FFAA", "GMX_AAF", "GMX_CDF", "GMX_CDF2020", "GMX_ChDkZ", "GMX_Takistan", "GM_Bundeswehr_Arid", "GM_Bundeswehr_Winter", "GM_Bundeswehr_Woodland", "GM_Denmark_Arid", "GM_Denmark_Winter", "GM_Denmark_Woodland", "GM_NVA_Arid", "GM_NVA_Winter", "GM_NVA_Woodland", "GM_POL_Arid", "GM_POL_Winter", "GM_POL_Woodland", "GM_Revolutionaries_Arid", "GM_Revolutionaries_Winter", "GM_Revolutionaries_Woodland", "RHSAFRF_Arid", "RHSAFRF_Woodland", "RHSGREF", "RHSSAF", "RHSUSAF_Arid", "RHSUSAF_Woodland", "RHS_UA_UAF", "SOGPF_ARVN", "SOGPF_FANK", "SOGPF_Khmer_Rouge", "SOGPF_MACV", "SOGPF_PathetLao", "SOGPF_PAVN", "SOGPF_USMC", "SOGPF_Viet_Cong", "Western_Sahara_ION", "Western_Sahara_NATO", "Western_Sahara_SFIA", "Western_Sahara_Tura", "Western_Sahara_UNA", "WW2_Spearhead_French_Interior_Forces", "WW2_Spearhead_French_Liberation_Army", "WW2_Spearhead_Stormtroopers", "WW2_Spearhead_US_Army", "WW2_Spearhead_Wehrmacht"};
        default = 6;
    };
    class EnemyFaction {
        title = "Enemy Faction";
        values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67};
        texts[] = {"A3_AAF", "A3_CSAT_Arid", "A3_CSAT_Spetsnaz", "A3_CSAT_Tropic", "A3_FIA", "A3_LDF", "A3_NATO_Arid", "A3_NATO_Tropic", "A3_NATO_Woodland", "A3_Syndikat", "CSLA_AFMC", "CSLA_CSLA", "CSLA_FIA", "CSLA_US", "CUP_CDF", "CUP_RACS", "CUP_RUS_Arid", "CUP_RUS_Woodland", "CUP_SLA", "CUP_Takistan", "CUP_US_Arid", "CUP_US_Woodland", "FFAA", "GMX_AAF", "GMX_CDF", "GMX_CDF2020", "GMX_ChDkZ", "GMX_Takistan", "GM_Bundeswehr_Arid", "GM_Bundeswehr_Winter", "GM_Bundeswehr_Woodland", "GM_Denmark_Arid", "GM_Denmark_Winter", "GM_Denmark_Woodland", "GM_NVA_Arid", "GM_NVA_Winter", "GM_NVA_Woodland", "GM_POL_Arid", "GM_POL_Winter", "GM_POL_Woodland", "GM_Revolutionaries_Arid", "GM_Revolutionaries_Winter", "GM_Revolutionaries_Woodland", "RHSAFRF_Arid", "RHSAFRF_Woodland", "RHSGREF", "RHSSAF", "RHSUSAF_Arid", "RHSUSAF_Woodland", "RHS_UA_UAF", "SOGPF_ARVN", "SOGPF_FANK", "SOGPF_Khmer_Rouge", "SOGPF_MACV", "SOGPF_PathetLao", "SOGPF_PAVN", "SOGPF_USMC", "SOGPF_Viet_Cong", "Western_Sahara_ION", "Western_Sahara_NATO", "Western_Sahara_SFIA", "Western_Sahara_Tura", "Western_Sahara_UNA", "WW2_Spearhead_French_Interior_Forces", "WW2_Spearhead_French_Liberation_Army", "WW2_Spearhead_Stormtroopers", "WW2_Spearhead_US_Army", "WW2_Spearhead_Wehrmacht"};
        default = 1;
    };
    class Time {
		title = "Time (hour)";
		values[] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24};
		default = 12;
	};
    class ViewDistance {
		title = "View distance (in metres)";
		values[] = {200,300,500,1000,1500,1600,2000,2500,3000,3500,4000,4500,5000,12000,40000};
		default = 2500;
	};
    class AISkill {
		title = "AI Skill"; // Param name visible in the list
		values[] = {0,1,2}; // Values; must be integers; has to have the same number of elements as 'texts'
		texts[] = {"Recruit","Regular","Veteran"}; // Description of each selectable item
		default = 2; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	class NumberFriendlyGroups {
		title = "Max Friendly Groups"; // Param name visible in the list
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 17, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 3; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	class NumberEnemyGroups {
		title = "Max Enemy Groups"; // Param name visible in the list
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 17, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 10; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
	class  NumberEnemySpecialGroups {
		title = "Max Special Enemy Groups"; // Param name visible in the list
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 17, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 7; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	}
	class  MinEnemyGroupsForCapture {
		title = "Minimum Enemy Groups For Zone Capture"; // Param name visible in the list
		values[] = {0, 1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 2; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	}
	class  MinAIDistanceForDeleteion {
		title = "Minimum AI Distance For Deleteion"; // Param name visible in the list
		values[] = {100, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 5000, 10000, 99999999}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 1500; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	}
	class ZoneRadius {
		title = "Zone Radius";
		values[] = {1,5,10,15, 20, 30, 40, 50, 55, 60, 70, 80, 90, 100, 200, 400, 500, 700, 800, 1000};
		default = 40;
	};
	/*class Checks {
		title = "Number of checks (Finds zones, spawners..)";
		values[] = {10, 50, 100, 200, 300, 400, 500, 1000};
		// When 'texts' are missing, values will be displayed directly instead
		default = 1000;
	};*/
	class HQEnabled {
        title = "HQ Enabled";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class FriendlyAIEnabled {
        title = "Friendly AI Enabled";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class FriendlyMarkEnemy {
        title = "Friendly Units Mark Enemy Positions?";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class ZeusSeesAI {
		title = "Allow Zeus to see spawned AI";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
	}
	class Fatigue {
        title = "Player Fatigue";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class Stamina {
        title = "Player Stamina";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class CustomAim {
        title = "More Steady Aim";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class SideObjectives {
        title = "Enabled Side Objectives";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class RandomMines {
        title = "Enabled Random Mines";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class NSides {
        title = "Number of Side Missions";
        values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
        texts[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
        default = 1;
    };
	class NGarrisons {
        title = "Number of Garrisons";
        values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
        texts[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
        default = 2;
    };
	class PlaceZoneRandomly {
        title = "Place Zone Randomly";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 0;
    };
    class RandomSideLocations {
        title = "Place Side Mission Randomly";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
	class ZoneSideEnabled {
        title = "Zone Sides Enabled";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
    class VirutalSupport {
        title = "Virutal Support";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
    class FriendliesUseTransport {
        title = "Friendlies Use Transport";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
    class ObjectivesRequireClearedSpace {
        title = "Objectives Require Cleared Space";
        values[] = {0,1};
        texts[] = {"Disabled","Enabled"};
        default = 1;
    };
    class  MaxUserVehicles {
		title = "Max User Vehicles"; // Param name visible in the list
		values[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 17, 20, 25, 30, 40, 50, 100}; // Values; must be integers; has to have the same number of elements as 'texts'
		default = 10; // Default value; must be listed in 'values' array, otherwise 0 is used
		// Default values that are not whole numbers do not work. Param will default to 0 (or 1 if defined)
	};
    class MaxFriendlyGroupSize {
        title = "Max Friendly Group Unit Size";
        values[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
        texts[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};
        default = 8;
    };
	class Timeacc {
	title = "Time Acceleration";
	values[] = {1,5,10,15,20,25,30,35,40,45,50,55,60};
	texts[] = {"1x (1game min. = 1real min.)","5x","10x","15x","20x","25x","30x (1game min. = 2real sec.)","35x","40x","45x","50x","55x","60x (1game min. = 1real sec.)"};
	default = 5;
	function = "BIS_fnc_paramTimeAcceleration";
	};
	
	
	//#include "Params\paramTimeAcceleration.hpp"
	

    //#define WEATHER_DEFAULT	25
    //#define DEBUGCONSOLE_DEFAULT 0
	//#define TIMEACCELERATION_DEFAULT  1

	//#include "\a3\functions_f\Params\paramWeather.hpp"
	//#include "\a3\functions_f\Params\paramDebugConsole.hpp"
	//#include "\a3\Functions_F_MP_Mark\Params\paramTimeAcceleration.hpp"
};

	
class CfgFunctions 
{ 
    #include "SBGF\cfgfunctions.hpp"
	#include "AIS\cfgFunctions.hpp"
};

#include "Scripts\Fex_FastTravel\defines.hpp"
#include "Scripts\Fex_FastTravel\dialogues.hpp"

#include "Scripts\MagRepack\MagRepack_config.hpp"

class CfgNotifications
{
	class JtacReloadNotification
	{
		title = "JTAC";
		iconPicture = "a3\ui_f\data\gui\cfg\communicationmenu\call_ca.paa";
		iconText = "1";
		description = "%1";
		color[] = {0.153, 0.933, 0.122, 1};
		duration = 5;
		priority = 0;
		difficulty[] = {};
	};
}

#include "AIS\Effects\BarDlg.hpp"










